TITLE "Equality Checker";

INCLUDE "cnt_modn.inc";

SUBDESIGN eq_checker (
	ss[4..1], pass[4..1], srst, hrst,
		mode, key_dig, key_mode, 
		cout4, rst_pulse : INPUT;
	result[3..1], cnt[2..1] : OUTPUT;
)

VARIABLE
	eqn : DFF;
	cnt4 : cnt_modn
	WITH ( N = 3 );
	aux : NODE;
	result[3..1] : NODE;
	--result[3..1] : TFF;

BEGIN
	eqn.clk = key_dig & !mode;
	eqn.clrn = !srst;
	
	IF ( (ss[] == pass[]) & !eqn) THEN
		eqn = GND;
	ELSE
		eqn = VCC;
	END IF;
	
	cnt4.rst = hrst # key_mode;
	cnt4.ena = !mode;
	aux = cout4 & eqn & !mode;
	cnt4.clk = aux;
	
	result[1].clk = cout4 & !eqn & !mode; 	-- Success
	result[2].clk = aux; 						-- Partial Failure
	result[3].clk = cnt4.cout;					-- 3 attempts Failure
--	result[].clrn = !(hrst # rst_pulse);
--	result[].t = VCC;

--	cnt[] = cnt4.q[];
END;